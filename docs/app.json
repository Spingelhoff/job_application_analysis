[{"name":"app.R","content":"library(shiny)\r\nlibrary(survival)\r\n\r\ndefault_data <- data.frame(\r\n  date = as.character(format(as.Date(Sys.Date()), \"%d/%m/%Y\")),\r\n  condition = c(\"E1A\", \"E1B\"),\r\n  replicate = 1L,\r\n  job = 1:2,\r\n  company = 3:4\r\n)\r\n\r\nexperiment_data <- structure(list(Application.Date = c(\"01/01/2024\", \"01/01/2024\",\r\n\"01/01/2024\", \"01/01/2024\", \"02/01/2024\", \"02/01/2024\", \"02/01/2024\",\r\n\"02/01/2024\", \"03/01/2024\", \"03/01/2024\", \"03/01/2024\", \"03/01/2024\",\r\n\"04/01/2024\", \"04/01/2024\", \"04/01/2024\", \"04/01/2024\", \"05/01/2024\",\r\n\"05/01/2024\", \"05/01/2024\", \"05/01/2024\", \"06/01/2024\", \"06/01/2024\",\r\n\"06/01/2024\", \"06/01/2024\", \"07/01/2024\", \"07/01/2024\", \"07/01/2024\",\r\n\"07/01/2024\", \"08/01/2024\", \"08/01/2024\", \"08/01/2024\", \"08/01/2024\",\r\n\"09/01/2024\", \"09/01/2024\", \"09/01/2024\", \"09/01/2024\", \"10/01/2024\",\r\n\"10/01/2024\", \"10/01/2024\", \"10/01/2024\", \"11/01/2024\", \"11/01/2024\",\r\n\"11/01/2024\", \"11/01/2024\", \"12/01/2024\", \"12/01/2024\", \"12/01/2024\",\r\n\"12/01/2024\", \"13/01/2024\", \"13/01/2024\", \"13/01/2024\", \"13/01/2024\",\r\n\"14/01/2024\", \"14/01/2024\", \"14/01/2024\", \"14/01/2024\", \"15/01/2024\",\r\n\"15/01/2024\", \"15/01/2024\", \"15/01/2024\", \"16/01/2024\", \"16/01/2024\",\r\n\"16/01/2024\", \"16/01/2024\", \"17/01/2024\", \"17/01/2024\", \"17/01/2024\",\r\n\"17/01/2024\", \"18/01/2024\", \"18/01/2024\", \"18/01/2024\", \"18/01/2024\",\r\n\"19/01/2024\", \"19/01/2024\", \"19/01/2024\", \"19/01/2024\", \"20/01/2024\",\r\n\"20/01/2024\", \"20/01/2024\", \"20/01/2024\", \"21/01/2024\", \"21/01/2024\",\r\n\"21/01/2024\", \"21/01/2024\", \"22/01/2024\", \"22/01/2024\", \"22/01/2024\",\r\n\"22/01/2024\", \"23/01/2024\", \"23/01/2024\", \"23/01/2024\", \"23/01/2024\",\r\n\"24/01/2024\", \"24/01/2024\", \"24/01/2024\", \"24/01/2024\", \"25/01/2024\",\r\n\"25/01/2024\", \"25/01/2024\", \"25/01/2024\", \"26/01/2024\", \"26/01/2024\",\r\n\"26/01/2024\", \"26/01/2024\", \"27/01/2024\", \"27/01/2024\", \"27/01/2024\",\r\n\"27/01/2024\", \"28/01/2024\", \"28/01/2024\", \"28/01/2024\", \"28/01/2024\",\r\n\"29/01/2024\", \"29/01/2024\", \"29/01/2024\", \"29/01/2024\", \"30/01/2024\",\r\n\"30/01/2024\", \"30/01/2024\", \"30/01/2024\"), Condition = c(\"E1A\",\r\n\"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\",\r\n\"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\",\r\n\"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\",\r\n\"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\",\r\n\"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\",\r\n\"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\",\r\n\"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\",\r\n\"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\",\r\n\"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\",\r\n\"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\",\r\n\"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\",\r\n\"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\",\r\n\"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\",\r\n\"E1B\", \"E1B\"), Replicate = c(1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L,\r\n1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L,\r\n1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L,\r\n1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L,\r\n1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L,\r\n1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L,\r\n1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L,\r\n1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L\r\n), Job = 1:120, Company = 121:240, Response = c(0L, 0L, 0L, 1L,\r\n0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 1L, 1L, 0L, 1L,\r\n0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 1L, 0L, 0L,\r\n0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L,\r\n0L, 0L, 1L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L,\r\n0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 1L, 0L,\r\n0L, 0L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,\r\n0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L,\r\n0L, 0L, 0L, 1L), Response.Date = c(\"21/01/2024\", \"24/01/2024\",\r\n\"20/01/2024\", \"15/01/2024\", \"20/01/2024\", \"15/01/2024\", \"13/01/2024\",\r\n\"12/01/2024\", \"22/01/2024\", \"25/01/2024\", \"24/01/2024\", \"22/01/2024\",\r\n\"24/01/2024\", \"15/01/2024\", \"27/01/2024\", \"22/01/2024\", \"28/01/2024\",\r\n\"18/01/2024\", \"16/01/2024\", \"25/01/2024\", \"27/01/2024\", \"27/01/2024\",\r\n\"21/01/2024\", \"21/01/2024\", \"01/02/2024\", \"22/01/2024\", \"31/01/2024\",\r\n\"30/01/2024\", \"28/01/2024\", \"21/01/2024\", \"27/01/2024\", \"31/01/2024\",\r\n\"29/01/2024\", \"30/01/2024\", \"26/01/2024\", \"31/01/2024\", \"26/01/2024\",\r\n\"20/01/2024\", \"01/02/2024\", \"03/02/2024\", \"22/01/2024\", \"23/01/2024\",\r\n\"03/02/2024\", \"03/02/2024\", \"01/02/2024\", \"23/01/2024\", \"31/01/2024\",\r\n\"06/02/2024\", \"05/02/2024\", \"27/01/2024\", \"03/02/2024\", \"27/01/2024\",\r\n\"24/01/2024\", \"29/01/2024\", \"31/01/2024\", \"01/02/2024\", \"03/02/2024\",\r\n\"26/01/2024\", \"27/01/2024\", \"26/01/2024\", \"06/02/2024\", \"09/02/2024\",\r\n\"28/01/2024\", \"30/01/2024\", \"02/02/2024\", \"09/02/2024\", \"31/01/2024\",\r\n\"06/02/2024\", \"30/01/2024\", \"30/01/2024\", \"03/02/2024\", \"08/02/2024\",\r\n\"12/02/2024\", \"11/02/2024\", \"10/02/2024\", \"05/02/2024\", \"02/02/2024\",\r\n\"31/01/2024\", \"13/02/2024\", \"08/02/2024\", \"11/02/2024\", \"05/02/2024\",\r\n\"12/02/2024\", \"07/02/2024\", \"05/02/2024\", \"16/02/2024\", \"02/02/2024\",\r\n\"11/02/2024\", \"04/02/2024\", \"11/02/2024\", \"04/02/2024\", \"02/02/2024\",\r\n\"03/02/2024\", \"05/02/2024\", \"06/02/2024\", \"14/02/2024\", \"08/02/2024\",\r\n\"05/02/2024\", \"06/02/2024\", \"17/02/2024\", \"11/02/2024\", \"17/02/2024\",\r\n\"11/02/2024\", \"13/02/2024\", \"19/02/2024\", \"14/02/2024\", \"19/02/2024\",\r\n\"12/02/2024\", \"13/02/2024\", \"08/02/2024\", \"13/02/2024\", \"14/02/2024\",\r\n\"08/02/2024\", \"18/02/2024\", \"16/02/2024\", \"14/02/2024\", \"21/02/2024\",\r\n\"24/02/2024\", \"19/02/2024\", \"17/02/2024\"), Interview = c(0L,\r\n0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L,\r\n0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,\r\n0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,\r\n0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,\r\n0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L,\r\n0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L,\r\n0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,\r\n0L, 1L, 0L, 0L, 0L, 0L, 0L), Interview.Date = c(\"\", \"\", \"\", \"26/01/2024\",\r\n\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"05/02/2024\",\r\n\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\r\n\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\r\n\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\r\n\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"20/02/2024\", \"\", \"\", \"\",\r\n\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"11/02/2024\",\r\n\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\r\n\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"29/02/2024\", \"\", \"\", \"\", \"\", \"\"),\r\n    Notes = c(NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,\r\n    NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,\r\n    NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,\r\n    NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,\r\n    NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,\r\n    NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,\r\n    NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,\r\n    NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,\r\n    NA, NA, NA)), class = \"data.frame\", row.names = c(NA, -120L\r\n))\r\n\r\nevent_data <- structure(list(Date = c(\"01/01/2024\", \"01/01/2024\", \"01/01/2024\",\r\n\"01/01/2024\", \"02/01/2024\", \"02/01/2024\", \"02/01/2024\", \"02/01/2024\",\r\n\"03/01/2024\", \"03/01/2024\", \"03/01/2024\", \"03/01/2024\", \"04/01/2024\",\r\n\"04/01/2024\", \"04/01/2024\", \"04/01/2024\", \"05/01/2024\", \"05/01/2024\",\r\n\"05/01/2024\", \"05/01/2024\", \"06/01/2024\", \"06/01/2024\", \"06/01/2024\",\r\n\"06/01/2024\", \"07/01/2024\", \"07/01/2024\", \"07/01/2024\", \"07/01/2024\",\r\n\"08/01/2024\", \"08/01/2024\", \"08/01/2024\", \"08/01/2024\", \"09/01/2024\",\r\n\"09/01/2024\", \"09/01/2024\", \"09/01/2024\", \"10/01/2024\", \"10/01/2024\",\r\n\"10/01/2024\", \"10/01/2024\", \"11/01/2024\", \"11/01/2024\", \"11/01/2024\",\r\n\"11/01/2024\", \"12/01/2024\", \"12/01/2024\", \"12/01/2024\", \"12/01/2024\",\r\n\"13/01/2024\", \"13/01/2024\", \"13/01/2024\", \"13/01/2024\", \"14/01/2024\",\r\n\"14/01/2024\", \"14/01/2024\", \"14/01/2024\", \"15/01/2024\", \"15/01/2024\",\r\n\"15/01/2024\", \"15/01/2024\", \"16/01/2024\", \"16/01/2024\", \"16/01/2024\",\r\n\"16/01/2024\", \"17/01/2024\", \"17/01/2024\", \"17/01/2024\", \"17/01/2024\",\r\n\"18/01/2024\", \"18/01/2024\", \"18/01/2024\", \"18/01/2024\", \"19/01/2024\",\r\n\"19/01/2024\", \"19/01/2024\", \"19/01/2024\", \"20/01/2024\", \"20/01/2024\",\r\n\"20/01/2024\", \"20/01/2024\", \"21/01/2024\", \"21/01/2024\", \"21/01/2024\",\r\n\"21/01/2024\", \"22/01/2024\", \"22/01/2024\", \"22/01/2024\", \"22/01/2024\",\r\n\"23/01/2024\", \"23/01/2024\", \"23/01/2024\", \"23/01/2024\", \"24/01/2024\",\r\n\"24/01/2024\", \"24/01/2024\", \"24/01/2024\", \"25/01/2024\", \"25/01/2024\",\r\n\"25/01/2024\", \"25/01/2024\", \"26/01/2024\", \"26/01/2024\", \"26/01/2024\",\r\n\"26/01/2024\", \"27/01/2024\", \"27/01/2024\", \"27/01/2024\", \"27/01/2024\",\r\n\"28/01/2024\", \"28/01/2024\", \"28/01/2024\", \"28/01/2024\", \"29/01/2024\",\r\n\"29/01/2024\", \"29/01/2024\", \"29/01/2024\", \"30/01/2024\", \"30/01/2024\",\r\n\"30/01/2024\", \"30/01/2024\"), Condition = c(\"E1A\", \"E1A\", \"E1B\",\r\n\"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\",\r\n\"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\",\r\n\"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\",\r\n\"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\",\r\n\"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\",\r\n\"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\",\r\n\"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\",\r\n\"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\",\r\n\"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\",\r\n\"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\",\r\n\"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\",\r\n\"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\",\r\n\"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\", \"E1A\", \"E1A\", \"E1B\", \"E1B\"\r\n), Replicate = c(1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L,\r\n2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L,\r\n2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L,\r\n2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L,\r\n2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L,\r\n2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L,\r\n2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L,\r\n2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L), Events = c(7L,\r\n5L, 5L, 4L, 8L, 7L, 7L, 7L, 7L, 4L, 6L, 10L, 3L, 4L, 9L, 3L,\r\n2L, 3L, 11L, 2L, 5L, 4L, 6L, 8L, 6L, 6L, 7L, 4L, 6L, 1L, 6L,\r\n9L, 3L, 2L, 9L, 10L, 4L, 6L, 6L, 3L, 5L, 3L, 7L, 2L, 8L, 3L,\r\n8L, 8L, 10L, 6L, 8L, 5L, 4L, 5L, 12L, 9L, 4L, 2L, 9L, 5L, 6L,\r\n1L, 8L, 6L, 5L, 8L, 9L, 5L, 6L, 4L, 6L, 7L, 6L, 3L, 3L, 4L, 6L,\r\n4L, 5L, 5L, 3L, 7L, 2L, 4L, 2L, 3L, 7L, 8L, 4L, 5L, 8L, 6L, 3L,\r\n6L, 8L, 5L, 4L, 7L, 9L, 5L, 3L, 7L, 15L, 5L, 7L, 6L, 5L, 12L,\r\n5L, 12L, 5L, 3L, 7L, 4L, 6L, 6L, 4L, 6L, 3L, 8L)), class = \"data.frame\", row.names = c(NA,\r\n-120L))\r\n\r\nui <- navbarPage(\r\n  title = \"Jobs Applications Toolkit\",\r\n  tabPanel(\r\n    title = \"Randomizer\",\r\n    fluidRow(\r\n      column(\r\n        3,\r\n        dateInput(\"date_input\",\"Date\", Sys.Date()),\r\n        align = \"center\"\r\n      ),\r\n      column(\r\n        3,\r\n        numericInput(\"replicate_input\", \"Replicate\", 1),\r\n        align = \"center\"\r\n      ),\r\n      column(\r\n        3,\r\n        textInput(\"id_input\", \"Identification Prefix\", \"E\"),\r\n        align = \"center\"\r\n      ),\r\n      column(\r\n        3,\r\n        numericInput(\"serial_input\", \"Serial Number\", 1),\r\n        align = \"center\"\r\n      )\r\n    ),\r\n    fluidRow(\r\n      column(\r\n        4,\r\n        h4(\"Job\", align = \"center\"),\r\n        textInput(\"job_a_input\", NULL),\r\n        textInput(\"job_b_input\", NULL),\r\n        align = \"center\"\r\n      ),\r\n      column(\r\n        4,\r\n        h4(\"Company\", align = \"center\"),\r\n        textInput(\"company_a_input\", NULL),\r\n        textInput(\"company_b_input\", NULL),\r\n        align = \"center\"\r\n      ),\r\n      column(\r\n        4,\r\n        h4(\"Link\", align = \"center\"),\r\n        textInput(\"link_a_input\", NULL),\r\n        textInput(\"link_b_input\", NULL),\r\n        align = \"center\"\r\n      )\r\n    ),\r\n    fluidRow(\r\n      column(\r\n        6,\r\n        actionButton(\"copy_button\", \"Copy\"),\r\n        align = \"right\"\r\n      ),\r\n      column(\r\n        6,\r\n        actionButton(\"randomize_button\", \"Randomize\"),\r\n        align = \"left\"\r\n      )\r\n    ),\r\n    fluidRow(\r\n      tableOutput(\"table\"),\r\n      align = \"center\"\r\n    )\r\n  ),\r\n  tabPanel(\r\n    title = \"Dashboard\",\r\n    fluidRow(\r\n      column(\r\n        3,\r\n        hr(style=\"border-color: black\"),\r\n        h6(\"Overall\", align = \"center\"),\r\n        hr(style=\"border-color: black\"),\r\n        align = \"center\"\r\n      ),\r\n      column(\r\n        9,\r\n        hr(style=\"border-color: black\"),\r\n        h6(\"Condition A\", align = \"center\"),\r\n        hr(style=\"border-color: black\"),\r\n        align = \"center\"\r\n      )\r\n    ),\r\n    fluidRow(\r\n      column(\r\n        3,\r\n        h5(\"Applications Sent\", align = \"center\"),\r\n        h3(textOutput(\"applications_sent\"), align = \"center\"),\r\n        align = \"center\"\r\n      ),\r\n      column(\r\n        3,\r\n        h5(\"Events per Application\", align = \"center\"),\r\n        h3(textOutput(\"events_per_applicationA\"), align = \"center\"),\r\n        align = \"center\"\r\n      ),\r\n      column(\r\n        3,\r\n        h5(\"Applications per Contact\", align = \"center\"),\r\n        h3(textOutput(\"events_per_interviewA\"), align = \"center\"),\r\n        align = \"center\"\r\n      ),\r\n      column(\r\n        3,\r\n        h5(\"Applications per Interview\", align = \"center\"),\r\n        h3(textOutput(\"applications_per_interviewA\"), align = \"center\"),\r\n        align = \"center\"\r\n      )\r\n    ),\r\n    fluidRow(\r\n      column(\r\n        3,\r\n        align = \"center\"\r\n      ),\r\n      column(\r\n        9,\r\n        hr(style=\"border-color: black\"),\r\n        h6(\"Condition B\", align = \"center\"),\r\n        hr(style=\"border-color: black\"),\r\n        align = \"center\"\r\n      )\r\n    ),\r\n    fluidRow(\r\n      column(\r\n        3,\r\n        h5(\"Total Days\", align = \"center\"),\r\n        h3(textOutput(\"total_days\"), align = \"center\"),\r\n        align = \"center\"\r\n      ),\r\n      column(\r\n        3,\r\n        h5(\"Events per Application\", align = \"center\"),\r\n        h3(textOutput(\"events_per_applicationB\"), align = \"center\"),\r\n        align = \"center\"\r\n      ),\r\n      column(\r\n        3,\r\n        h5(\"Applications per Contact\", align = \"center\"),\r\n        h3(textOutput(\"events_per_interviewB\"), align = \"center\"),\r\n        align = \"center\"\r\n      ),\r\n      column(\r\n        3,\r\n        h5(\"Applications per Interview\", align = \"center\"),\r\n        h3(textOutput(\"applications_per_interviewB\"), align = \"center\"),\r\n        align = \"center\"\r\n      )\r\n    ),\r\n    fluidRow(\r\n      column(\r\n        3,\r\n        plotOutput(\"poisson_regression\"),\r\n        align = \"center\"\r\n      ),\r\n      column(\r\n        3,\r\n        plotOutput(\"logistic_regression2\"),\r\n        align = \"center\"\r\n      ),\r\n      column(\r\n        3,\r\n        plotOutput(\"km_curve\"),\r\n        align = \"center\"\r\n      ),\r\n      column(\r\n        3,\r\n        plotOutput(\"logistic_regression\"),\r\n        align = \"center\"\r\n      )\r\n    ),\r\n    fluidRow(\r\n      column(\r\n        3,\r\n        h5(textOutput(\"count_effect\"), align = \"center\"),\r\n        align = \"center\"\r\n      ),\r\n      column(\r\n        3,\r\n        h5(textOutput(\"odds_effect2\"), align = \"center\"),\r\n        align = \"center\"\r\n      ),\r\n      column(\r\n        3,\r\n        h5(textOutput(\"curve_difference\"), align = \"center\"),\r\n        align = \"center\"\r\n      ),\r\n      column(\r\n        3,\r\n        h5(textOutput(\"odds_effect\"), align = \"center\"),\r\n        align = \"center\"\r\n      )\r\n    ),\r\n    fluidRow(\r\n      column(\r\n        4,\r\n        align = \"center\"\r\n      ),\r\n      column(\r\n        4,\r\n        actionButton(\"upload_button\", label = \"Upload\"),\r\n        align = \"center\"\r\n      ),\r\n      column(\r\n        4,\r\n        align = \"center\"\r\n      )\r\n    )\r\n  )\r\n)\r\n\r\n# Define server logic required to draw a histogram\r\nserver <- function(input, output) {\r\n\r\n  table_data <- reactiveVal({default_data})\r\n\r\n  observeEvent(input$copy_button,{\r\n    table_data(\r\n      data.frame(\r\n        date = as.character(format(input$date_input, \"%d/%m/%Y\")),\r\n        condition = c(paste0(input$id_input, input$serial_input, \"A\"), paste0(input$id_input, input$serial_input, \"B\")),\r\n        replicate = input$replicate_input,\r\n        job = c(input$job_a_input, input$job_b_input),\r\n        company = c(input$company_a_input, input$company_b_input)\r\n      )\r\n    )\r\n  })\r\n\r\n  observeEvent(input$randomize_button,{\r\n    table_data(\r\n      data.frame(\r\n        date = as.character(format(input$date_input, \"%d/%m/%Y\")),\r\n        condition = sample(c(paste0(input$id_input, input$serial_input, \"A\"), paste0(input$id_input, input$serial_input, \"B\")), 2),\r\n        replicate = input$replicate_input,\r\n        job = c(input$job_a_input, input$job_b_input),\r\n        company = c(input$company_a_input, input$company_b_input)\r\n      )\r\n    )\r\n    showModal(modalDialog(\r\n      title = \"Randomization Status\",\r\n      \"Success!\",\r\n      footer = modalButton(\"Close\")\r\n    ))\r\n  })\r\n\r\n  output$table <- renderTable({table_data()})\r\n\r\n  experiment_data <- reactiveVal(experiment_data)\r\n\r\n  event_data <- reactiveVal(event_data)\r\n\r\n  conditionA <- reactiveVal(\"E1A\")\r\n\r\n  conditionB <- reactiveVal(\"E1B\")\r\n\r\n  observeEvent(input$upload_button, {\r\n    showModal(modalDialog(\r\n      title = \"File Upload\",\r\n      div(fileInput(\"experiment_upload\", label = \"Upload Experiment Data\"), align = \"center\"),\r\n      div(fileInput(\"event_upload\", label = \"Upload Event Data\"), align = \"center\"),\r\n      div(textInput(\"condition_a\", label = \"Condition A\"), align = \"center\"),\r\n      div(textInput(\"condition_b\", label = \"Condition B\"), align = \"center\"),\r\n      footer = tagList(\r\n        actionButton(\"upload_confirm\", label = \"Confirm Upload\"),\r\n        modalButton(\"Cancel\")\r\n      )\r\n    ))\r\n  })\r\n\r\n  observeEvent(input$upload_confirm, {\r\n    experiment_data(read.csv(input$experiment_upload$datapath))\r\n    event_data(read.csv(input$event_upload$datapath))\r\n    conditionA(input$condition_a)\r\n    conditionB(input$condition_b)\r\n    removeModal()\r\n  })\r\n\r\n  modeling_data <- reactive({merge(\r\n    experiment_data(),\r\n    event_data(),\r\n    by.x = c(\"Application.Date\", \"Condition\", \"Replicate\"),\r\n    by.y = c(\"Date\", \"Condition\", \"Replicate\")\r\n  )})\r\n\r\n  poisson_model <- reactive({glm(\r\n    Events ~ Condition + Date + Replicate,\r\n    family = poisson(),\r\n    data = event_data()\r\n  )})\r\n\r\n  poisson_summary <- reactive({as.data.frame(summary(poisson_model())$coefficients)})\r\n\r\n  logistic_model <- reactive({glm(\r\n    Interview ~ Condition + Replicate,\r\n    family = \"binomial\",\r\n    data = experiment_data()\r\n  )})\r\n\r\n  logistic_summary <- reactive({summary(logistic_model())$coefficients})\r\n\r\n  logistic_model2 <- reactive({glm(\r\n    Response ~ Condition + Replicate,\r\n    family = \"binomial\",\r\n    data = experiment_data()\r\n  )})\r\n\r\n  logistic_summary2 <- reactive({summary(logistic_model2())$coefficients})\r\n\r\n  km_model <- reactive({survfit(\r\n    Surv(\r\n      time = as.Date(experiment_data()$Response.Date, format = \"%d/%m/%Y\") -\r\n        as.Date(experiment_data()$Application.Date, format = \"%d/%m/%Y\"),\r\n      event = experiment_data()$Response\r\n    ) ~ experiment_data()$Condition\r\n  )})\r\n\r\n  km_diff <- reactive({survdiff(\r\n    Surv(\r\n      time = as.Date(experiment_data()$Response.Date, format = \"%d/%m/%Y\") -\r\n        as.Date(experiment_data()$Application.Date, format = \"%d/%m/%Y\"),\r\n      event = experiment_data()$Response\r\n    ) ~ experiment_data()$Condition\r\n  )})\r\n\r\n  output$applications_sent <- renderText({\r\n    length(experiment_data()$Job)\r\n  })\r\n\r\n  output$total_days <- renderText({\r\n    length(unique(experiment_data()$Application.Date))\r\n  })\r\n\r\n  output$events_per_applicationA <- renderText({\r\n    sum(event_data()[event_data()$Condition == conditionA(),]$Events) /\r\n      length(experiment_data()[experiment_data()$Condition == conditionA(),]$Job)\r\n  })\r\n\r\n  output$events_per_interviewA <- renderText({\r\n    length(experiment_data()[experiment_data()$Condition == conditionA(),]$Job) /\r\n      sum(experiment_data()[experiment_data()$Condition == conditionA(),]$Response)\r\n  })\r\n\r\n  output$applications_per_interviewA <- renderText({\r\n    length(experiment_data()[experiment_data()$Condition == conditionA(),]$Job) /\r\n      sum(experiment_data()[experiment_data()$Condition == conditionA(),]$Interview)\r\n  })\r\n\r\n  output$events_per_applicationB <- renderText({\r\n    sum(event_data()[event_data()$Condition == conditionB(),]$Events) /\r\n      length(experiment_data()[experiment_data()$Condition == conditionB(),]$Job)\r\n  })\r\n\r\n  output$events_per_interviewB <- renderText({\r\n    length(experiment_data()[experiment_data()$Condition == conditionB(),]$Job) /\r\n      sum(experiment_data()[experiment_data()$Condition == conditionB(),]$Response)\r\n  })\r\n\r\n  output$applications_per_interviewB <- renderText({\r\n    length(experiment_data()[experiment_data()$Condition == conditionB(),]$Job) /\r\n      sum(experiment_data()[experiment_data()$Condition == conditionB(),]$Interview)\r\n  })\r\n\r\n  output$poisson_regression <- renderPlot({\r\n    boxplot(\r\n      poisson_model()$fitted.values ~ poisson_model()$data$Condition,\r\n      main = \"Fitted Events Counts\",\r\n      ylab = NULL,\r\n      xlab = NULL\r\n    )\r\n  })\r\n\r\n  output$logistic_regression <- renderPlot({\r\n    boxplot(\r\n      logistic_model()$fitted.values ~ logistic_model()$data$Condition,\r\n      main = \"Fitted Interview Probabilities\",\r\n      ylab = NULL,\r\n      xlab = NULL\r\n    )\r\n  })\r\n\r\n  output$logistic_regression2 <- renderPlot({\r\n    boxplot(\r\n      logistic_model2()$fitted.values ~ logistic_model2()$data$Condition,\r\n      main = \"Fitted Contact Probabilities\",\r\n      ylab = NULL,\r\n      xlab = NULL\r\n    )\r\n  })\r\n\r\n  output$km_curve <- renderPlot({\r\n    plot(\r\n      km_model(), col = c(\"black\",\"blue\"),\r\n      main = \"Contact Curves\", fun = \"event\")\r\n  })\r\n\r\n  output$count_effect <- renderText({\r\n    paste(\r\n      \"Count Effect:\", round(poisson_summary()[[paste0(\"Condition\", conditionB()), \"Estimate\"]], 2),\r\n      \"+/-\", round(poisson_summary()[[paste0(\"Condition\", conditionB()), \"Std. Error\"]], 2),\r\n      \"(\", poisson_summary()[[paste0(\"Condition\", conditionB()), \"Pr(>|z|)\"]], \")\"\r\n    )\r\n  })\r\n\r\n  output$odds_effect <- renderText({\r\n    paste(\r\n      \"Odds Ratio Effect:\", round(exp(logistic_summary()[[paste0(\"Condition\", conditionB()), \"Estimate\"]]), 2),\r\n      \"+/-\", round(exp(logistic_summary()[[paste0(\"Condition\", conditionB()), \"Std. Error\"]]), 2),\r\n      \"(\", logistic_summary()[[paste0(\"Condition\", conditionB()), \"Pr(>|z|)\"]], \")\"\r\n    )\r\n  })\r\n\r\n  output$odds_effect2 <- renderText({\r\n    paste(\r\n      \"Odds Ratio Effect:\", round(exp(logistic_summary2()[[paste0(\"Condition\", conditionB()), \"Estimate\"]]), 2),\r\n      \"+/-\", round(exp(logistic_summary2()[[paste0(\"Condition\", conditionB()), \"Std. Error\"]]), 2),\r\n      \"(\", logistic_summary2()[[paste0(\"Condition\", conditionB()), \"Pr(>|z|)\"]], \")\"\r\n    )\r\n  })\r\n\r\n  output$curve_difference <- renderText({\r\n    paste(\"Curve Difference:\", \"(\", km_diff()$pvalue, \")\")\r\n  })\r\n}\r\n\r\n# Run the application\r\nshinyApp(ui = ui, server = server)\r\n","type":"text"}]
